import numpy as np

# Генерация случайной матрицы
# Сгенерируйте матрицу, состоящую из 1000 строк и 50 столбцов,
# элементы которой являются случайными из нормального распределения N(1,100).
# loc: среднее нормального распределения (в нашем случае 1)
# scale: стандартное отклонение нормального распределения (в нашем случае 10)
# size: размер матрицы (в нашем случае (1000, 50))
x = np.random.normal(loc=1, scale=10, size=(1000, 50))
print x

# Нормировка матрицы
# Произведите нормировку матрицы из предыдущего задания:
# вычтите из каждого столбца его среднее значение,
# а затем поделите на его стандартное отклонение.

# Функция для вычисления среднего: np.mean
m = np.mean(x, axis=0)
# Функция для вычисления стандартного отклонения: np.std
std = np.std(x, axis=0)
x_norm = ((x - m) / std)
print x_norm

# Операции над элементами матрицы
# Выведите для заданной матрицы номера строк,
# сумма элементов в которых превосходит 10.

z = np.array([[4, 5, 0],
              [1, 9, 3],
              [5, 1, 1],
              [3, 3, 3],
              [9, 9, 9],
              [4, 7, 1]])
r = np.sum(z, axis=1)
print np.nonzero(r > 10)

# Объединение матриц
# Сгенерируйте две единичные матрицы (т.е. с единицами на диагонали)
# размера 3x3. Соедините две матрицы в одну размера 6x3.

# Функция для генерации единичной матрицы: np.eye
a = np.eye(3)
b = np.eye(3)
print a
print b
# Функция для вертикальной стыковки матриц: np.vstack((A, B))
ab = np.vstack((a, b))
print ab
